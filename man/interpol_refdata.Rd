% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpol_refdata.R
\name{interpol_refdata}
\alias{interpol_refdata}
\title{Interpolation of gene expression on time series from reference data}
\usage{
interpol_refdata(X, n.inter, time.series = NULL, ica.nc = 16,
  keep.c = 1:10, center = F, t.min = NULL, t.max = NULL,
  new.timepoints = NULL, span = 0.25, plot = F, return.fits = F)
}
\arguments{
\item{X}{gene expression matrix of reference time series, genes as rows, (ordered) individuals as columns}

\item{n.inter}{number of timepoints to return in interpolated data}

\item{time.series}{timepoints of the reference (X). If none given, 1:ncol(X) is used.}

\item{ica.nc}{number of components to keep in icafast}

\item{keep.c}{indices of components to keep for interpolation}

\item{center}{wether to perform a centered ICA (by individual).}

\item{t.min}{start time of new time series (ignored if new.timepoints is given)}

\item{t.max}{end time of new time series (ignored if new.timepoints is given)}

\item{new.timepoints}{vector of length n.inter with the new time series (overrides t.min and t.max)}

\item{span}{value(s) given to loess for curve fitting on the ica components}

\item{plot}{if TRUE, plots the components and their fitted curves}

\item{return.fits}{if TRUE, returns the list of fitted loess objects and curves}
}
\description{
function that computes interpolated data from a reference time series
}
\examples{

\donttest{
data(oud_ref)

interpold <- interpol_refdata(oud_ref$X, 200, 
                              time.series = oud_ref$time.series, 
                              t.min = min(oud_ref$time.series), 
                              t.max = max(oud_ref$time.series),
                              plot = TRUE)

par(mfrow=c(2,2))
pb <- sapply(c(2,5,13,50), function(i){
   plot(oud_ref$time.series, oud_ref$X[i,],
        type = 'l', lwd=2, 
        main=rownames(oud_ref$X)[i], xlab = 'time')
   points(interpold$time.series, interpold$interpol.gene_expr[i,],
          type = 'l', lwd=2, col='firebrick')
  if(i==5){
    legend('topright', legend = c("Initial ref. data", "Interpolated data"),
           lwd=3, col=c('black', 'firebrick'), bty = "n")
  }
})
}


}
