% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ge_im.R
\name{plot.geim}
\alias{plot.geim}
\title{Plot a GEIM object}
\usage{
\method{plot}{geim}(
  x,
  ref = NULL,
  ncs = NULL,
  n.inter = NULL,
  by.inter = NULL,
  cov.levels = NULL,
  t.unit = NULL,
  col = NULL,
  col.i = "red",
  show.legend = T,
  l.pos = "topleft",
  show.stats = T,
  ...
)
}
\arguments{
\item{x}{a \code{geim} object, as returned by \code{\link{ge_im}}.}

\item{ref}{a \code{ref} object, as returned by \code{\link{make_ref}}.}

\item{ncs}{which components to plot, defaults to all.}

\item{n.inter}{interpolation resolution, as in \code{seq(start, end, length.out = n.inter)}. One of \code{ref}, \code{n.inter}, or \code{by.inter} must be specified.}

\item{by.inter}{interpolation resolution, as in \code{seq(start, end, by = by.inter)}. One of \code{ref}, \code{n.inter}, or \code{by.inter} must be specified.}

\item{cov.levels}{a named list with potential model covariate levels (e.g batch, strain) to predict as (defaults to first level).}

\item{t.unit}{an optional string specifying the time unit and t-zero, e.g "h past egg-laying".}

\item{col, col.i}{color for data and interpolation line respectively.}

\item{show.legend, l.pos}{whether to show the legend, and its position passed on to \code{\link[graphics]{legend}}}

\item{show.stats}{whether to print model fit (deviance explained and relative error) and component (variance explained) statistics on the plot.}

\item{...}{additional arguments passed on to \code{\link[graphics]{plot}}.}
}
\value{
Invisibly returns a table with component variance explained and model fit on component indices (R2, deviance explained, relative error).
}
\description{
Plots geim interpolation on components.
Interpolation metadata (such as time units, inteprolation resolution or covariates)
can be specified through an existing \code{ref} object, or directly to this function.
}
\examples{
\donttest{
requireNamespace('wormRef', quietly = TRUE)
requireNamespace('stats', quietly = TRUE)

# gene expression data
X <- wormRef::Cel_larval$g

# pheno data (e.g time, batch)
p <- wormRef::Cel_larval$p

# do a pca & select nb of components to use for interpol
pca <- stats::prcomp(X, rank = 20)
nc <- sum(summary(pca)$importance[3, ] < .999) + 1


# find optimal spline type
# setup formulas
smooths <- c('bs', 'tp', 'cr', 'ds')
flist <- as.list(paste0('X ~ s(age, bs = \'', smooths, '\') + cov'))
# do CV
cvres <- ge_imCV(X = scale(X), p = p, formula_list = flist,
                 cv.n = 20, nc = nc)
# check results
plot(cvres, names.arrange = 4) # lowest pred error with 'ds' spline

# build model & make reference
m <- ge_im(X = X, p = p, formula = 'X ~ s(age, bs = \'ds\') + cov', nc = nc)

ref <- make_ref(m, cov.levels = list('cov'='O.20'), n.inter = 100, 
                t.unit='h past egg-laying (20C)')

# check model interpolation on pca components
par(mfrow = c(2,2))
plot(m, ref, ncs=1:4) # showing first 4 PCs


# test
ae_X <- ae(X, ref)
par(mfrow = c(1,2))
plot(p$age, ae_X$age.estimates[,1])
plot(ae_X, groups = p$cov)


}
}
